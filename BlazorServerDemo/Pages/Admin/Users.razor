@page "/Users"
@*@attribute [Authorize(Roles = "")]
*@
@inject UserManager<ApplicationUser> UserMgr


<h3>Users</h3>

<p>List of users: <button class="btn alert-primary"> Add User</button></p>

@if (UserList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-check">
  <input class="form-check-input" type="checkbox" value="" id="chkActiveOnly" name="chkActiveOnly" @onchange="ChkActive_Click">
  <label class="form-check-label" for="chkActiveOnly">
    Show active only
  </label>
  <input  placeholder="Search" @onchange="OnSearchTextChange" /> 
</div>
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>User Name</th>
                <th>Entity Type</th>
                 <th>Email</th>
                <th>Phone#</th>
                <th>Active</th>
           </tr>
        </thead>
        <tbody>
            @foreach (ApplicationUser user in UserList)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.UserName</td>
                    <td>@user.UserEntityType</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNumber</td>                
                    <td>@user.IsActive</td>                
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<ApplicationUser> AllUserList=new List<ApplicationUser>();
    private List<ApplicationUser> UserList=new List<ApplicationUser>();
    public bool showActive{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        AllUserList = await UserMgr.Users.ToListAsync();
        UserList = AllUserList.ToList();
    }

    private async Task ChkActive_Click(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        if (args != null && args.Value != null)
        {
            showActive = (bool)args.Value;
            if (showActive)
                UserList = AllUserList.Where(u => u.IsActive == true).ToList();
            else
                UserList = AllUserList.ToList();
        }
    }

    private void OnSearchTextChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        string? term = args?.Value?.ToString();
        if (!string.IsNullOrWhiteSpace(term))
        {
            if (showActive)
                UserList = AllUserList.Where(u => (u.IsActive == true && (u.FirstName.Contains(term) || u.LastName.Contains(term)))).ToList();
            else
                UserList = AllUserList.Where(u => (u.FirstName.Contains(term) || u.LastName.Contains(term))).ToList();
        }
        else
        {
            if (showActive)
                UserList = AllUserList.Where(u => u.IsActive == true).ToList();
            else
                UserList = AllUserList.ToList();
        }

    }
}
